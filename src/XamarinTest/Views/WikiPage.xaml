<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             x:Class="XamarinTest.Views.WikiPage"
             mvvm:ViewModelLocator.AutowireViewModel="True"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             mc:Ignorable="d"
             xmlns:viewModels="clr-namespace:ViewModels.ViewModels;assembly=ViewModels"
             xmlns:mvvm="clr-namespace:Prism.Mvvm;assembly=Prism.Forms"
             d:DataContext="{d:DesignInstance viewModels:WikiPageViewModel}">
    <ContentPage.ToolbarItems>
        <ToolbarItem Icon="information_icon" x:Name="Icon" />
    </ContentPage.ToolbarItems>

    <ContentPage.Content>
        <StackLayout Margin="20" Spacing="10">
            <Label Text="What is MVVM?"
                   VerticalOptions="StartAndExpand" 
                   HorizontalOptions="CenterAndExpand" />
            <Label Text="MVVM facilitates a separation of development of the graphical user interface – be it via a markup language or GUI code – from development of the business logic or back-end logic (the data model). The view model of MVVM is a value converter, meaning the view model is responsible for exposing (converting) the data objects from the model in such a way that objects are easily managed and presented. In this respect, the view model is more model than view, and handles most if not all of the view's display logic. The view model may implement a mediator pattern, organizing access to the back-end logic around the set of use cases supported by the view."
                   VerticalOptions="StartAndExpand" 
                   HorizontalOptions="CenterAndExpand" />
        </StackLayout>
    </ContentPage.Content>
</ContentPage>